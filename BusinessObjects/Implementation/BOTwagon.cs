/*************************************************************
** Class generated by CodeTrigger, Version 4.8.6.1
** This class was generated on 27.06.2018 13:13:08
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using Awsd5.DataObjects;

namespace Awsd5.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOTwagon.
	///It maintains a collection of BOContainers objects.
	///</Summary>
	public partial class BOTwagon : DATACONN0_BaseBusiness
	{
		#region member variables
		protected Int32? _id;
		protected string _name;
		protected Int32? _r1;
		protected Int32? _r2;
		protected Int32? _userid;
		protected DateTime? _realdada;
		protected Int32? _r3;
		protected Int32? _r4;
		protected Int32? _r5;
		protected Int32? _r6;
		protected Int32? _r7;
		protected Int32? _r8;
		protected Int32? _r9;
		protected Int32? _r10;
		protected Int32? _r11;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		List<BOContainers> _boContainersCollection;
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOTwagon()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public BOTwagon(Int32 id)
		{
			try
			{
				DAOTwagon daoTwagon = DAOTwagon.SelectOne(id);
				_id = daoTwagon.Id;
				_name = daoTwagon.Name;
				_r1 = daoTwagon.R1;
				_r2 = daoTwagon.R2;
				_userid = daoTwagon.Userid;
				_realdada = daoTwagon.Realdada;
				_r3 = daoTwagon.R3;
				_r4 = daoTwagon.R4;
				_r5 = daoTwagon.R5;
				_r6 = daoTwagon.R6;
				_r7 = daoTwagon.R7;
				_r8 = daoTwagon.R8;
				_r9 = daoTwagon.R9;
				_r10 = daoTwagon.R10;
				_r11 = daoTwagon.R11;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOTwagon
		///</parameters>
		protected internal BOTwagon(DAOTwagon daoTwagon)
		{
			try
			{
				_id = daoTwagon.Id;
				_name = daoTwagon.Name;
				_r1 = daoTwagon.R1;
				_r2 = daoTwagon.R2;
				_userid = daoTwagon.Userid;
				_realdada = daoTwagon.Realdada;
				_r3 = daoTwagon.R3;
				_r4 = daoTwagon.R4;
				_r5 = daoTwagon.R5;
				_r6 = daoTwagon.R6;
				_r7 = daoTwagon.R7;
				_r8 = daoTwagon.R8;
				_r9 = daoTwagon.R9;
				_r10 = daoTwagon.R10;
				_r11 = daoTwagon.R11;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new Twagon record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOTwagon daoTwagon = new DAOTwagon();
			RegisterDataObject(daoTwagon);
			BeginTransaction("savenewBOTwagon");
			try
			{
				daoTwagon.Name = _name;
				daoTwagon.R1 = _r1;
				daoTwagon.R2 = _r2;
				daoTwagon.Userid = _userid;
				daoTwagon.Realdada = _realdada;
				daoTwagon.R3 = _r3;
				daoTwagon.R4 = _r4;
				daoTwagon.R5 = _r5;
				daoTwagon.R6 = _r6;
				daoTwagon.R7 = _r7;
				daoTwagon.R8 = _r8;
				daoTwagon.R9 = _r9;
				daoTwagon.R10 = _r10;
				daoTwagon.R11 = _r11;
				daoTwagon.Insert();
				CommitTransaction();
				
				_id = daoTwagon.Id;
				_name = daoTwagon.Name;
				_r1 = daoTwagon.R1;
				_r2 = daoTwagon.R2;
				_userid = daoTwagon.Userid;
				_realdada = daoTwagon.Realdada;
				_r3 = daoTwagon.R3;
				_r4 = daoTwagon.R4;
				_r5 = daoTwagon.R5;
				_r6 = daoTwagon.R6;
				_r7 = daoTwagon.R7;
				_r8 = daoTwagon.R8;
				_r9 = daoTwagon.R9;
				_r10 = daoTwagon.R10;
				_r11 = daoTwagon.R11;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOTwagon");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one Twagon record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOTwagon
		///</parameters>
		public virtual void Update()
		{
			DAOTwagon daoTwagon = new DAOTwagon();
			RegisterDataObject(daoTwagon);
			BeginTransaction("updateBOTwagon");
			try
			{
				daoTwagon.Id = _id;
				daoTwagon.Name = _name;
				daoTwagon.R1 = _r1;
				daoTwagon.R2 = _r2;
				daoTwagon.Userid = _userid;
				daoTwagon.Realdada = _realdada;
				daoTwagon.R3 = _r3;
				daoTwagon.R4 = _r4;
				daoTwagon.R5 = _r5;
				daoTwagon.R6 = _r6;
				daoTwagon.R7 = _r7;
				daoTwagon.R8 = _r8;
				daoTwagon.R9 = _r9;
				daoTwagon.R10 = _r10;
				daoTwagon.R11 = _r11;
				daoTwagon.Update();
				CommitTransaction();
				
				_id = daoTwagon.Id;
				_name = daoTwagon.Name;
				_r1 = daoTwagon.R1;
				_r2 = daoTwagon.R2;
				_userid = daoTwagon.Userid;
				_realdada = daoTwagon.Realdada;
				_r3 = daoTwagon.R3;
				_r4 = daoTwagon.R4;
				_r5 = daoTwagon.R5;
				_r6 = daoTwagon.R6;
				_r7 = daoTwagon.R7;
				_r8 = daoTwagon.R8;
				_r9 = daoTwagon.R9;
				_r10 = daoTwagon.R10;
				_r11 = daoTwagon.R11;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOTwagon");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one Twagon record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOTwagon daoTwagon = new DAOTwagon();
			RegisterDataObject(daoTwagon);
			BeginTransaction("deleteBOTwagon");
			try
			{
				daoTwagon.Id = _id;
				daoTwagon.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOTwagon");
				throw;
			}
		}
		
		///<Summary>
		///TwagonCollection
		///This method returns the collection of BOTwagon objects
		///</Summary>
		///<returns>
		///List[BOTwagon]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOTwagon> TwagonCollection()
		{
			try
			{
				IList<BOTwagon> boTwagonCollection = new List<BOTwagon>();
				IList<DAOTwagon> daoTwagonCollection = DAOTwagon.SelectAll();
			
				foreach(DAOTwagon daoTwagon in daoTwagonCollection)
					boTwagonCollection.Add(new BOTwagon(daoTwagon));
			
				return boTwagonCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///TwagonCollectionCount
		///This method returns the collection count of BOTwagon objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 TwagonCollectionCount()
		{
			try
			{
				Int32 objCount = DAOTwagon.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///TwagonCollectionFromSearchFields
		///This method returns the collection of BOTwagon objects, filtered by a search object
		///</Summary>
		///<returns>
		///List<BOTwagon>
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOTwagon> TwagonCollectionFromSearchFields(BOTwagon boTwagon)
		{
			try
			{
				IList<BOTwagon> boTwagonCollection = new List<BOTwagon>();
				DAOTwagon daoTwagon = new DAOTwagon();
				daoTwagon.Id = boTwagon.Id;
				daoTwagon.Name = boTwagon.Name;
				daoTwagon.R1 = boTwagon.R1;
				daoTwagon.R2 = boTwagon.R2;
				daoTwagon.Userid = boTwagon.Userid;
				daoTwagon.Realdada = boTwagon.Realdada;
				daoTwagon.R3 = boTwagon.R3;
				daoTwagon.R4 = boTwagon.R4;
				daoTwagon.R5 = boTwagon.R5;
				daoTwagon.R6 = boTwagon.R6;
				daoTwagon.R7 = boTwagon.R7;
				daoTwagon.R8 = boTwagon.R8;
				daoTwagon.R9 = boTwagon.R9;
				daoTwagon.R10 = boTwagon.R10;
				daoTwagon.R11 = boTwagon.R11;
				IList<DAOTwagon> daoTwagonCollection = DAOTwagon.SelectAllBySearchFields(daoTwagon);
			
				foreach(DAOTwagon resdaoTwagon in daoTwagonCollection)
					boTwagonCollection.Add(new BOTwagon(resdaoTwagon));
			
				return boTwagonCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///TwagonCollectionFromSearchFieldsCount
		///This method returns the collection count of BOTwagon objects, filtered by a search object
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 TwagonCollectionFromSearchFieldsCount(BOTwagon boTwagon)
		{
			try
			{
				DAOTwagon daoTwagon = new DAOTwagon();
				daoTwagon.Id = boTwagon.Id;
				daoTwagon.Name = boTwagon.Name;
				daoTwagon.R1 = boTwagon.R1;
				daoTwagon.R2 = boTwagon.R2;
				daoTwagon.Userid = boTwagon.Userid;
				daoTwagon.Realdada = boTwagon.Realdada;
				daoTwagon.R3 = boTwagon.R3;
				daoTwagon.R4 = boTwagon.R4;
				daoTwagon.R5 = boTwagon.R5;
				daoTwagon.R6 = boTwagon.R6;
				daoTwagon.R7 = boTwagon.R7;
				daoTwagon.R8 = boTwagon.R8;
				daoTwagon.R9 = boTwagon.R9;
				daoTwagon.R10 = boTwagon.R10;
				daoTwagon.R11 = boTwagon.R11;
				Int32 objCount = DAOTwagon.SelectAllBySearchFieldsCount(daoTwagon);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		///<Summary>
		///ContainersCollection
		///This method returns its collection of BOContainers objects
		///</Summary>
		///<returns>
		///IList[BOContainers]
		///</returns>
		///<parameters>
		///BOTwagon
		///</parameters>
		public virtual IList<BOContainers> ContainersCollection()
		{
			try
			{
				if(_boContainersCollection == null)
					LoadContainersCollection();
				
				return _boContainersCollection.AsReadOnly();
			}
			catch
			{
				throw;
			}
		}
		
		///<Summary>
		///LoadContainersCollection
		///This method loads the internal collection of BOContainers objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void LoadContainersCollection()
		{
			try
			{
				_boContainersCollection = new List<BOContainers>();
				IList<DAOContainers> daoContainersCollection = DAOContainers.SelectAllByTvagonid(_id.Value);
				
				foreach(DAOContainers daoContainers in daoContainersCollection)
					_boContainersCollection.Add(new BOContainers(daoContainers));
			}
			catch
			{
				throw;
			}
		}
		
		///<Summary>
		///AddContainers
		///This method persists a BOContainers object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOContainers
		///</parameters>
		public virtual void AddContainers(BOContainers boContainers)
		{
			DAOContainers daoContainers = new DAOContainers();
			RegisterDataObject(daoContainers);
			BeginTransaction("addContainers");
			try
			{
				daoContainers.Id = boContainers.Id;
				daoContainers.Number = boContainers.Number;
				daoContainers.Doctara = boContainers.Doctara;
				daoContainers.Docbrutto = boContainers.Docbrutto;
				daoContainers.Docnetto = boContainers.Docnetto;
				daoContainers.Weightcount = boContainers.Weightcount;
				daoContainers.W1time = boContainers.W1time;
				daoContainers.W1result = boContainers.W1result;
				daoContainers.W1tara = boContainers.W1tara;
				daoContainers.W1brutto = boContainers.W1brutto;
				daoContainers.W1netto = boContainers.W1netto;
				daoContainers.W1scale = boContainers.W1scale;
				daoContainers.W2time = boContainers.W2time;
				daoContainers.W2result = boContainers.W2result;
				daoContainers.W2tara = boContainers.W2tara;
				daoContainers.W2brutto = boContainers.W2brutto;
				daoContainers.W2netto = boContainers.W2netto;
				daoContainers.W2scale = boContainers.W2scale;
				daoContainers.Session = boContainers.Session;
				daoContainers.Receiverid = boContainers.Receiverid;
				daoContainers.Senderid = boContainers.Senderid;
				daoContainers.Productid = boContainers.Productid;
				daoContainers.Operationid = boContainers.Operationid;
				daoContainers.Lotnumber = boContainers.Lotnumber;
				daoContainers.Trailid = boContainers.Trailid;
				daoContainers.Minesid = boContainers.Minesid;
				daoContainers.Zagrnumber = boContainers.Zagrnumber;
				daoContainers.Returnid = boContainers.Returnid;
				daoContainers.Userid = boContainers.Userid;
				daoContainers.Sessionid = boContainers.Sessionid;
				daoContainers.Speed = boContainers.Speed;
				daoContainers.Nplatf = boContainers.Nplatf;
				daoContainers.Lineid = boContainers.Lineid;
				daoContainers.Vid1 = boContainers.Vid1;
				daoContainers.Vid2 = boContainers.Vid2;
				daoContainers.Vid3 = boContainers.Vid3;
				daoContainers.Pr1 = boContainers.Pr1;
				daoContainers.Pr2 = boContainers.Pr2;
				daoContainers.Pr3 = boContainers.Pr3;
				daoContainers.Tvagonid = _id.Value;
				daoContainers.Insert();
				CommitTransaction();
				
				/*pick up any primary keys, computed values etc*/
				boContainers = new BOContainers(daoContainers);
				if(_boContainersCollection != null)
					_boContainersCollection.Add(boContainers);
			}
			catch
			{
				RollbackTransaction("addContainers");
				throw;
			}
		}
		
		///<Summary>
		///DeleteAllContainers
		///This method deletes all BOContainers objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllContainers()
		{
			RegisterDataObject(null);
			BeginTransaction("deleteAllContainers");
			try
			{
				DAOContainers.DeleteAllByTvagonid(ConnectionProvider, _id.Value);
				CommitTransaction();
				if(_boContainersCollection != null)
				{
					_boContainersCollection.Clear();
					_boContainersCollection = null;
				}
			}
			catch
			{
				RollbackTransaction("deleteAllContainers");
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		public virtual string Name
		{
			get
			{
				 return _name;
			}
			set
			{
				_name = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? R1
		{
			get
			{
				 return _r1;
			}
			set
			{
				_r1 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? R2
		{
			get
			{
				 return _r2;
			}
			set
			{
				_r2 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Userid
		{
			get
			{
				 return _userid;
			}
			set
			{
				_userid = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? Realdada
		{
			get
			{
				 return _realdada;
			}
			set
			{
				_realdada = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? R3
		{
			get
			{
				 return _r3;
			}
			set
			{
				_r3 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? R4
		{
			get
			{
				 return _r4;
			}
			set
			{
				_r4 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? R5
		{
			get
			{
				 return _r5;
			}
			set
			{
				_r5 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? R6
		{
			get
			{
				 return _r6;
			}
			set
			{
				_r6 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? R7
		{
			get
			{
				 return _r7;
			}
			set
			{
				_r7 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? R8
		{
			get
			{
				 return _r8;
			}
			set
			{
				_r8 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? R9
		{
			get
			{
				 return _r9;
			}
			set
			{
				_r9 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? R10
		{
			get
			{
				 return _r10;
			}
			set
			{
				_r10 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? R11
		{
			get
			{
				 return _r11;
			}
			set
			{
				_r11 = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
