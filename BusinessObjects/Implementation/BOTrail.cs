/*************************************************************
** Class generated by CodeTrigger, Version 4.8.6.1
** This class was generated on 27.06.2018 13:13:08
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using Awsd5.DataObjects;

namespace Awsd5.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOTrail.
	///It maintains a collection of BOContainers objects.
	///</Summary>
	public partial class BOTrail : DATACONN0_BaseBusiness
	{
		#region member variables
		protected Int32? _id;
		protected string _number;
		protected float? _doctara;
		protected float? _docbrutto;
		protected float? _docnetto;
		protected Int32? _weightcount;
		protected DateTime? _w1time;
		protected float? _w1result;
		protected float? _w1tara;
		protected float? _w1brutto;
		protected float? _w1netto;
		protected Int32? _w1scale;
		protected DateTime? _w2time;
		protected float? _w2result;
		protected float? _w2tara;
		protected float? _w2brutto;
		protected float? _w2netto;
		protected Int32? _w2scale;
		protected Int32? _session;
		protected Int32? _receiverid;
		protected Int32? _senderid;
		protected Int32? _productid;
		protected Int32? _operationid;
		protected string _lotnumber;
		protected Int32? _trainid1;
		protected Int32? _minesid;
		protected string _zagrnumber;
		protected Int32? _returnid;
		protected Int32? _userid;
		protected Int32? _sessionid;
		protected float? _speed;
		protected Int32? _nplatf;
		protected Int32? _lineid;
		protected Int32? _tvagonid;
		protected byte[] _vid1;
		protected byte[] _vid2;
		protected byte[] _vid3;
		protected Int32? _pr1;
		protected Int32? _pr2;
		protected Int32? _pr3;
		protected Int32? _trainid2;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		List<BOContainers> _boContainersCollection;
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOTrail()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public BOTrail(Int32 id)
		{
			try
			{
				DAOTrail daoTrail = DAOTrail.SelectOne(id);
				_id = daoTrail.Id;
				_number = daoTrail.Number;
				_doctara = daoTrail.Doctara;
				_docbrutto = daoTrail.Docbrutto;
				_docnetto = daoTrail.Docnetto;
				_weightcount = daoTrail.Weightcount;
				_w1time = daoTrail.W1time;
				_w1result = daoTrail.W1result;
				_w1tara = daoTrail.W1tara;
				_w1brutto = daoTrail.W1brutto;
				_w1netto = daoTrail.W1netto;
				_w1scale = daoTrail.W1scale;
				_w2time = daoTrail.W2time;
				_w2result = daoTrail.W2result;
				_w2tara = daoTrail.W2tara;
				_w2brutto = daoTrail.W2brutto;
				_w2netto = daoTrail.W2netto;
				_w2scale = daoTrail.W2scale;
				_session = daoTrail.Session;
				_receiverid = daoTrail.Receiverid;
				_senderid = daoTrail.Senderid;
				_productid = daoTrail.Productid;
				_operationid = daoTrail.Operationid;
				_lotnumber = daoTrail.Lotnumber;
				_trainid1 = daoTrail.Trainid1;
				_minesid = daoTrail.Minesid;
				_zagrnumber = daoTrail.Zagrnumber;
				_returnid = daoTrail.Returnid;
				_userid = daoTrail.Userid;
				_sessionid = daoTrail.Sessionid;
				_speed = daoTrail.Speed;
				_nplatf = daoTrail.Nplatf;
				_lineid = daoTrail.Lineid;
				_tvagonid = daoTrail.Tvagonid;
				_vid1 = daoTrail.Vid1;
				_vid2 = daoTrail.Vid2;
				_vid3 = daoTrail.Vid3;
				_pr1 = daoTrail.Pr1;
				_pr2 = daoTrail.Pr2;
				_pr3 = daoTrail.Pr3;
				_trainid2 = daoTrail.Trainid2;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOTrail
		///</parameters>
		protected internal BOTrail(DAOTrail daoTrail)
		{
			try
			{
				_id = daoTrail.Id;
				_number = daoTrail.Number;
				_doctara = daoTrail.Doctara;
				_docbrutto = daoTrail.Docbrutto;
				_docnetto = daoTrail.Docnetto;
				_weightcount = daoTrail.Weightcount;
				_w1time = daoTrail.W1time;
				_w1result = daoTrail.W1result;
				_w1tara = daoTrail.W1tara;
				_w1brutto = daoTrail.W1brutto;
				_w1netto = daoTrail.W1netto;
				_w1scale = daoTrail.W1scale;
				_w2time = daoTrail.W2time;
				_w2result = daoTrail.W2result;
				_w2tara = daoTrail.W2tara;
				_w2brutto = daoTrail.W2brutto;
				_w2netto = daoTrail.W2netto;
				_w2scale = daoTrail.W2scale;
				_session = daoTrail.Session;
				_receiverid = daoTrail.Receiverid;
				_senderid = daoTrail.Senderid;
				_productid = daoTrail.Productid;
				_operationid = daoTrail.Operationid;
				_lotnumber = daoTrail.Lotnumber;
				_trainid1 = daoTrail.Trainid1;
				_minesid = daoTrail.Minesid;
				_zagrnumber = daoTrail.Zagrnumber;
				_returnid = daoTrail.Returnid;
				_userid = daoTrail.Userid;
				_sessionid = daoTrail.Sessionid;
				_speed = daoTrail.Speed;
				_nplatf = daoTrail.Nplatf;
				_lineid = daoTrail.Lineid;
				_tvagonid = daoTrail.Tvagonid;
				_vid1 = daoTrail.Vid1;
				_vid2 = daoTrail.Vid2;
				_vid3 = daoTrail.Vid3;
				_pr1 = daoTrail.Pr1;
				_pr2 = daoTrail.Pr2;
				_pr3 = daoTrail.Pr3;
				_trainid2 = daoTrail.Trainid2;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new Trail record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOTrail daoTrail = new DAOTrail();
			RegisterDataObject(daoTrail);
			BeginTransaction("savenewBOTrail");
			try
			{
				daoTrail.Number = _number;
				daoTrail.Doctara = _doctara;
				daoTrail.Docbrutto = _docbrutto;
				daoTrail.Docnetto = _docnetto;
				daoTrail.Weightcount = _weightcount;
				daoTrail.W1time = _w1time;
				daoTrail.W1result = _w1result;
				daoTrail.W1tara = _w1tara;
				daoTrail.W1brutto = _w1brutto;
				daoTrail.W1netto = _w1netto;
				daoTrail.W1scale = _w1scale;
				daoTrail.W2time = _w2time;
				daoTrail.W2result = _w2result;
				daoTrail.W2tara = _w2tara;
				daoTrail.W2brutto = _w2brutto;
				daoTrail.W2netto = _w2netto;
				daoTrail.W2scale = _w2scale;
				daoTrail.Session = _session;
				daoTrail.Receiverid = _receiverid;
				daoTrail.Senderid = _senderid;
				daoTrail.Productid = _productid;
				daoTrail.Operationid = _operationid;
				daoTrail.Lotnumber = _lotnumber;
				daoTrail.Trainid1 = _trainid1;
				daoTrail.Minesid = _minesid;
				daoTrail.Zagrnumber = _zagrnumber;
				daoTrail.Returnid = _returnid;
				daoTrail.Userid = _userid;
				daoTrail.Sessionid = _sessionid;
				daoTrail.Speed = _speed;
				daoTrail.Nplatf = _nplatf;
				daoTrail.Lineid = _lineid;
				daoTrail.Tvagonid = _tvagonid;
				daoTrail.Vid1 = _vid1;
				daoTrail.Vid2 = _vid2;
				daoTrail.Vid3 = _vid3;
				daoTrail.Pr1 = _pr1;
				daoTrail.Pr2 = _pr2;
				daoTrail.Pr3 = _pr3;
				daoTrail.Trainid2 = _trainid2;
				daoTrail.Insert();
				CommitTransaction();
				
				_id = daoTrail.Id;
				_number = daoTrail.Number;
				_doctara = daoTrail.Doctara;
				_docbrutto = daoTrail.Docbrutto;
				_docnetto = daoTrail.Docnetto;
				_weightcount = daoTrail.Weightcount;
				_w1time = daoTrail.W1time;
				_w1result = daoTrail.W1result;
				_w1tara = daoTrail.W1tara;
				_w1brutto = daoTrail.W1brutto;
				_w1netto = daoTrail.W1netto;
				_w1scale = daoTrail.W1scale;
				_w2time = daoTrail.W2time;
				_w2result = daoTrail.W2result;
				_w2tara = daoTrail.W2tara;
				_w2brutto = daoTrail.W2brutto;
				_w2netto = daoTrail.W2netto;
				_w2scale = daoTrail.W2scale;
				_session = daoTrail.Session;
				_receiverid = daoTrail.Receiverid;
				_senderid = daoTrail.Senderid;
				_productid = daoTrail.Productid;
				_operationid = daoTrail.Operationid;
				_lotnumber = daoTrail.Lotnumber;
				_trainid1 = daoTrail.Trainid1;
				_minesid = daoTrail.Minesid;
				_zagrnumber = daoTrail.Zagrnumber;
				_returnid = daoTrail.Returnid;
				_userid = daoTrail.Userid;
				_sessionid = daoTrail.Sessionid;
				_speed = daoTrail.Speed;
				_nplatf = daoTrail.Nplatf;
				_lineid = daoTrail.Lineid;
				_tvagonid = daoTrail.Tvagonid;
				_vid1 = daoTrail.Vid1;
				_vid2 = daoTrail.Vid2;
				_vid3 = daoTrail.Vid3;
				_pr1 = daoTrail.Pr1;
				_pr2 = daoTrail.Pr2;
				_pr3 = daoTrail.Pr3;
				_trainid2 = daoTrail.Trainid2;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOTrail");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one Trail record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOTrail
		///</parameters>
		public virtual void Update()
		{
			DAOTrail daoTrail = new DAOTrail();
			RegisterDataObject(daoTrail);
			BeginTransaction("updateBOTrail");
			try
			{
				daoTrail.Id = _id;
				daoTrail.Number = _number;
				daoTrail.Doctara = _doctara;
				daoTrail.Docbrutto = _docbrutto;
				daoTrail.Docnetto = _docnetto;
				daoTrail.Weightcount = _weightcount;
				daoTrail.W1time = _w1time;
				daoTrail.W1result = _w1result;
				daoTrail.W1tara = _w1tara;
				daoTrail.W1brutto = _w1brutto;
				daoTrail.W1netto = _w1netto;
				daoTrail.W1scale = _w1scale;
				daoTrail.W2time = _w2time;
				daoTrail.W2result = _w2result;
				daoTrail.W2tara = _w2tara;
				daoTrail.W2brutto = _w2brutto;
				daoTrail.W2netto = _w2netto;
				daoTrail.W2scale = _w2scale;
				daoTrail.Session = _session;
				daoTrail.Receiverid = _receiverid;
				daoTrail.Senderid = _senderid;
				daoTrail.Productid = _productid;
				daoTrail.Operationid = _operationid;
				daoTrail.Lotnumber = _lotnumber;
				daoTrail.Trainid1 = _trainid1;
				daoTrail.Minesid = _minesid;
				daoTrail.Zagrnumber = _zagrnumber;
				daoTrail.Returnid = _returnid;
				daoTrail.Userid = _userid;
				daoTrail.Sessionid = _sessionid;
				daoTrail.Speed = _speed;
				daoTrail.Nplatf = _nplatf;
				daoTrail.Lineid = _lineid;
				daoTrail.Tvagonid = _tvagonid;
				daoTrail.Vid1 = _vid1;
				daoTrail.Vid2 = _vid2;
				daoTrail.Vid3 = _vid3;
				daoTrail.Pr1 = _pr1;
				daoTrail.Pr2 = _pr2;
				daoTrail.Pr3 = _pr3;
				daoTrail.Trainid2 = _trainid2;
				daoTrail.Update();
				CommitTransaction();
				
				_id = daoTrail.Id;
				_number = daoTrail.Number;
				_doctara = daoTrail.Doctara;
				_docbrutto = daoTrail.Docbrutto;
				_docnetto = daoTrail.Docnetto;
				_weightcount = daoTrail.Weightcount;
				_w1time = daoTrail.W1time;
				_w1result = daoTrail.W1result;
				_w1tara = daoTrail.W1tara;
				_w1brutto = daoTrail.W1brutto;
				_w1netto = daoTrail.W1netto;
				_w1scale = daoTrail.W1scale;
				_w2time = daoTrail.W2time;
				_w2result = daoTrail.W2result;
				_w2tara = daoTrail.W2tara;
				_w2brutto = daoTrail.W2brutto;
				_w2netto = daoTrail.W2netto;
				_w2scale = daoTrail.W2scale;
				_session = daoTrail.Session;
				_receiverid = daoTrail.Receiverid;
				_senderid = daoTrail.Senderid;
				_productid = daoTrail.Productid;
				_operationid = daoTrail.Operationid;
				_lotnumber = daoTrail.Lotnumber;
				_trainid1 = daoTrail.Trainid1;
				_minesid = daoTrail.Minesid;
				_zagrnumber = daoTrail.Zagrnumber;
				_returnid = daoTrail.Returnid;
				_userid = daoTrail.Userid;
				_sessionid = daoTrail.Sessionid;
				_speed = daoTrail.Speed;
				_nplatf = daoTrail.Nplatf;
				_lineid = daoTrail.Lineid;
				_tvagonid = daoTrail.Tvagonid;
				_vid1 = daoTrail.Vid1;
				_vid2 = daoTrail.Vid2;
				_vid3 = daoTrail.Vid3;
				_pr1 = daoTrail.Pr1;
				_pr2 = daoTrail.Pr2;
				_pr3 = daoTrail.Pr3;
				_trainid2 = daoTrail.Trainid2;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOTrail");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one Trail record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOTrail daoTrail = new DAOTrail();
			RegisterDataObject(daoTrail);
			BeginTransaction("deleteBOTrail");
			try
			{
				daoTrail.Id = _id;
				daoTrail.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOTrail");
				throw;
			}
		}
		
		///<Summary>
		///TrailCollection
		///This method returns the collection of BOTrail objects
		///</Summary>
		///<returns>
		///List[BOTrail]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOTrail> TrailCollection()
		{
			try
			{
				IList<BOTrail> boTrailCollection = new List<BOTrail>();
				IList<DAOTrail> daoTrailCollection = DAOTrail.SelectAll();
			
				foreach(DAOTrail daoTrail in daoTrailCollection)
					boTrailCollection.Add(new BOTrail(daoTrail));
			
				return boTrailCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///TrailCollectionCount
		///This method returns the collection count of BOTrail objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 TrailCollectionCount()
		{
			try
			{
				Int32 objCount = DAOTrail.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///TrailCollectionFromSearchFields
		///This method returns the collection of BOTrail objects, filtered by a search object
		///</Summary>
		///<returns>
		///List<BOTrail>
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOTrail> TrailCollectionFromSearchFields(BOTrail boTrail)
		{
			try
			{
				IList<BOTrail> boTrailCollection = new List<BOTrail>();
				DAOTrail daoTrail = new DAOTrail();
				daoTrail.Id = boTrail.Id;
				daoTrail.Number = boTrail.Number;
				daoTrail.Doctara = boTrail.Doctara;
				daoTrail.Docbrutto = boTrail.Docbrutto;
				daoTrail.Docnetto = boTrail.Docnetto;
				daoTrail.Weightcount = boTrail.Weightcount;
				daoTrail.W1time = boTrail.W1time;
				daoTrail.W1result = boTrail.W1result;
				daoTrail.W1tara = boTrail.W1tara;
				daoTrail.W1brutto = boTrail.W1brutto;
				daoTrail.W1netto = boTrail.W1netto;
				daoTrail.W1scale = boTrail.W1scale;
				daoTrail.W2time = boTrail.W2time;
				daoTrail.W2result = boTrail.W2result;
				daoTrail.W2tara = boTrail.W2tara;
				daoTrail.W2brutto = boTrail.W2brutto;
				daoTrail.W2netto = boTrail.W2netto;
				daoTrail.W2scale = boTrail.W2scale;
				daoTrail.Session = boTrail.Session;
				daoTrail.Receiverid = boTrail.Receiverid;
				daoTrail.Senderid = boTrail.Senderid;
				daoTrail.Productid = boTrail.Productid;
				daoTrail.Operationid = boTrail.Operationid;
				daoTrail.Lotnumber = boTrail.Lotnumber;
				daoTrail.Trainid1 = boTrail.Trainid1;
				daoTrail.Minesid = boTrail.Minesid;
				daoTrail.Zagrnumber = boTrail.Zagrnumber;
				daoTrail.Returnid = boTrail.Returnid;
				daoTrail.Userid = boTrail.Userid;
				daoTrail.Sessionid = boTrail.Sessionid;
				daoTrail.Speed = boTrail.Speed;
				daoTrail.Nplatf = boTrail.Nplatf;
				daoTrail.Lineid = boTrail.Lineid;
				daoTrail.Tvagonid = boTrail.Tvagonid;
				daoTrail.Vid1 = boTrail.Vid1;
				daoTrail.Vid2 = boTrail.Vid2;
				daoTrail.Vid3 = boTrail.Vid3;
				daoTrail.Pr1 = boTrail.Pr1;
				daoTrail.Pr2 = boTrail.Pr2;
				daoTrail.Pr3 = boTrail.Pr3;
				daoTrail.Trainid2 = boTrail.Trainid2;
				IList<DAOTrail> daoTrailCollection = DAOTrail.SelectAllBySearchFields(daoTrail);
			
				foreach(DAOTrail resdaoTrail in daoTrailCollection)
					boTrailCollection.Add(new BOTrail(resdaoTrail));
			
				return boTrailCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///TrailCollectionFromSearchFieldsCount
		///This method returns the collection count of BOTrail objects, filtered by a search object
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 TrailCollectionFromSearchFieldsCount(BOTrail boTrail)
		{
			try
			{
				DAOTrail daoTrail = new DAOTrail();
				daoTrail.Id = boTrail.Id;
				daoTrail.Number = boTrail.Number;
				daoTrail.Doctara = boTrail.Doctara;
				daoTrail.Docbrutto = boTrail.Docbrutto;
				daoTrail.Docnetto = boTrail.Docnetto;
				daoTrail.Weightcount = boTrail.Weightcount;
				daoTrail.W1time = boTrail.W1time;
				daoTrail.W1result = boTrail.W1result;
				daoTrail.W1tara = boTrail.W1tara;
				daoTrail.W1brutto = boTrail.W1brutto;
				daoTrail.W1netto = boTrail.W1netto;
				daoTrail.W1scale = boTrail.W1scale;
				daoTrail.W2time = boTrail.W2time;
				daoTrail.W2result = boTrail.W2result;
				daoTrail.W2tara = boTrail.W2tara;
				daoTrail.W2brutto = boTrail.W2brutto;
				daoTrail.W2netto = boTrail.W2netto;
				daoTrail.W2scale = boTrail.W2scale;
				daoTrail.Session = boTrail.Session;
				daoTrail.Receiverid = boTrail.Receiverid;
				daoTrail.Senderid = boTrail.Senderid;
				daoTrail.Productid = boTrail.Productid;
				daoTrail.Operationid = boTrail.Operationid;
				daoTrail.Lotnumber = boTrail.Lotnumber;
				daoTrail.Trainid1 = boTrail.Trainid1;
				daoTrail.Minesid = boTrail.Minesid;
				daoTrail.Zagrnumber = boTrail.Zagrnumber;
				daoTrail.Returnid = boTrail.Returnid;
				daoTrail.Userid = boTrail.Userid;
				daoTrail.Sessionid = boTrail.Sessionid;
				daoTrail.Speed = boTrail.Speed;
				daoTrail.Nplatf = boTrail.Nplatf;
				daoTrail.Lineid = boTrail.Lineid;
				daoTrail.Tvagonid = boTrail.Tvagonid;
				daoTrail.Vid1 = boTrail.Vid1;
				daoTrail.Vid2 = boTrail.Vid2;
				daoTrail.Vid3 = boTrail.Vid3;
				daoTrail.Pr1 = boTrail.Pr1;
				daoTrail.Pr2 = boTrail.Pr2;
				daoTrail.Pr3 = boTrail.Pr3;
				daoTrail.Trainid2 = boTrail.Trainid2;
				Int32 objCount = DAOTrail.SelectAllBySearchFieldsCount(daoTrail);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		///<Summary>
		///ContainersCollection
		///This method returns its collection of BOContainers objects
		///</Summary>
		///<returns>
		///IList[BOContainers]
		///</returns>
		///<parameters>
		///BOTrail
		///</parameters>
		public virtual IList<BOContainers> ContainersCollection()
		{
			try
			{
				if(_boContainersCollection == null)
					LoadContainersCollection();
				
				return _boContainersCollection.AsReadOnly();
			}
			catch
			{
				throw;
			}
		}
		
		///<Summary>
		///LoadContainersCollection
		///This method loads the internal collection of BOContainers objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void LoadContainersCollection()
		{
			try
			{
				_boContainersCollection = new List<BOContainers>();
				IList<DAOContainers> daoContainersCollection = DAOContainers.SelectAllByTrailid(_id.Value);
				
				foreach(DAOContainers daoContainers in daoContainersCollection)
					_boContainersCollection.Add(new BOContainers(daoContainers));
			}
			catch
			{
				throw;
			}
		}
		
		///<Summary>
		///AddContainers
		///This method persists a BOContainers object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOContainers
		///</parameters>
		public virtual void AddContainers(BOContainers boContainers)
		{
			DAOContainers daoContainers = new DAOContainers();
			RegisterDataObject(daoContainers);
			BeginTransaction("addContainers");
			try
			{
				daoContainers.Id = boContainers.Id;
				daoContainers.Number = boContainers.Number;
				daoContainers.Doctara = boContainers.Doctara;
				daoContainers.Docbrutto = boContainers.Docbrutto;
				daoContainers.Docnetto = boContainers.Docnetto;
				daoContainers.Weightcount = boContainers.Weightcount;
				daoContainers.W1time = boContainers.W1time;
				daoContainers.W1result = boContainers.W1result;
				daoContainers.W1tara = boContainers.W1tara;
				daoContainers.W1brutto = boContainers.W1brutto;
				daoContainers.W1netto = boContainers.W1netto;
				daoContainers.W1scale = boContainers.W1scale;
				daoContainers.W2time = boContainers.W2time;
				daoContainers.W2result = boContainers.W2result;
				daoContainers.W2tara = boContainers.W2tara;
				daoContainers.W2brutto = boContainers.W2brutto;
				daoContainers.W2netto = boContainers.W2netto;
				daoContainers.W2scale = boContainers.W2scale;
				daoContainers.Session = boContainers.Session;
				daoContainers.Receiverid = boContainers.Receiverid;
				daoContainers.Senderid = boContainers.Senderid;
				daoContainers.Productid = boContainers.Productid;
				daoContainers.Operationid = boContainers.Operationid;
				daoContainers.Lotnumber = boContainers.Lotnumber;
				daoContainers.Minesid = boContainers.Minesid;
				daoContainers.Zagrnumber = boContainers.Zagrnumber;
				daoContainers.Returnid = boContainers.Returnid;
				daoContainers.Userid = boContainers.Userid;
				daoContainers.Sessionid = boContainers.Sessionid;
				daoContainers.Speed = boContainers.Speed;
				daoContainers.Nplatf = boContainers.Nplatf;
				daoContainers.Lineid = boContainers.Lineid;
				daoContainers.Tvagonid = boContainers.Tvagonid;
				daoContainers.Vid1 = boContainers.Vid1;
				daoContainers.Vid2 = boContainers.Vid2;
				daoContainers.Vid3 = boContainers.Vid3;
				daoContainers.Pr1 = boContainers.Pr1;
				daoContainers.Pr2 = boContainers.Pr2;
				daoContainers.Pr3 = boContainers.Pr3;
				daoContainers.Trailid = _id.Value;
				daoContainers.Insert();
				CommitTransaction();
				
				/*pick up any primary keys, computed values etc*/
				boContainers = new BOContainers(daoContainers);
				if(_boContainersCollection != null)
					_boContainersCollection.Add(boContainers);
			}
			catch
			{
				RollbackTransaction("addContainers");
				throw;
			}
		}
		
		///<Summary>
		///DeleteAllContainers
		///This method deletes all BOContainers objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllContainers()
		{
			RegisterDataObject(null);
			BeginTransaction("deleteAllContainers");
			try
			{
				DAOContainers.DeleteAllByTrailid(ConnectionProvider, _id.Value);
				CommitTransaction();
				if(_boContainersCollection != null)
				{
					_boContainersCollection.Clear();
					_boContainersCollection = null;
				}
			}
			catch
			{
				RollbackTransaction("deleteAllContainers");
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		public virtual string Number
		{
			get
			{
				 return _number;
			}
			set
			{
				_number = value;
				_isDirty = true;
			}
		}
		
		public virtual float? Doctara
		{
			get
			{
				 return _doctara;
			}
			set
			{
				_doctara = value;
				_isDirty = true;
			}
		}
		
		public virtual float? Docbrutto
		{
			get
			{
				 return _docbrutto;
			}
			set
			{
				_docbrutto = value;
				_isDirty = true;
			}
		}
		
		public virtual float? Docnetto
		{
			get
			{
				 return _docnetto;
			}
			set
			{
				_docnetto = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Weightcount
		{
			get
			{
				 return _weightcount;
			}
			set
			{
				_weightcount = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? W1time
		{
			get
			{
				 return _w1time;
			}
			set
			{
				_w1time = value;
				_isDirty = true;
			}
		}
		
		public virtual float? W1result
		{
			get
			{
				 return _w1result;
			}
			set
			{
				_w1result = value;
				_isDirty = true;
			}
		}
		
		public virtual float? W1tara
		{
			get
			{
				 return _w1tara;
			}
			set
			{
				_w1tara = value;
				_isDirty = true;
			}
		}
		
		public virtual float? W1brutto
		{
			get
			{
				 return _w1brutto;
			}
			set
			{
				_w1brutto = value;
				_isDirty = true;
			}
		}
		
		public virtual float? W1netto
		{
			get
			{
				 return _w1netto;
			}
			set
			{
				_w1netto = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? W1scale
		{
			get
			{
				 return _w1scale;
			}
			set
			{
				_w1scale = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? W2time
		{
			get
			{
				 return _w2time;
			}
			set
			{
				_w2time = value;
				_isDirty = true;
			}
		}
		
		public virtual float? W2result
		{
			get
			{
				 return _w2result;
			}
			set
			{
				_w2result = value;
				_isDirty = true;
			}
		}
		
		public virtual float? W2tara
		{
			get
			{
				 return _w2tara;
			}
			set
			{
				_w2tara = value;
				_isDirty = true;
			}
		}
		
		public virtual float? W2brutto
		{
			get
			{
				 return _w2brutto;
			}
			set
			{
				_w2brutto = value;
				_isDirty = true;
			}
		}
		
		public virtual float? W2netto
		{
			get
			{
				 return _w2netto;
			}
			set
			{
				_w2netto = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? W2scale
		{
			get
			{
				 return _w2scale;
			}
			set
			{
				_w2scale = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Session
		{
			get
			{
				 return _session;
			}
			set
			{
				_session = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Receiverid
		{
			get
			{
				 return _receiverid;
			}
			set
			{
				_receiverid = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Senderid
		{
			get
			{
				 return _senderid;
			}
			set
			{
				_senderid = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Productid
		{
			get
			{
				 return _productid;
			}
			set
			{
				_productid = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Operationid
		{
			get
			{
				 return _operationid;
			}
			set
			{
				_operationid = value;
				_isDirty = true;
			}
		}
		
		public virtual string Lotnumber
		{
			get
			{
				 return _lotnumber;
			}
			set
			{
				_lotnumber = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Trainid1
		{
			get
			{
				 return _trainid1;
			}
			set
			{
				_trainid1 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Minesid
		{
			get
			{
				 return _minesid;
			}
			set
			{
				_minesid = value;
				_isDirty = true;
			}
		}
		
		public virtual string Zagrnumber
		{
			get
			{
				 return _zagrnumber;
			}
			set
			{
				_zagrnumber = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Returnid
		{
			get
			{
				 return _returnid;
			}
			set
			{
				_returnid = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Userid
		{
			get
			{
				 return _userid;
			}
			set
			{
				_userid = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Sessionid
		{
			get
			{
				 return _sessionid;
			}
			set
			{
				_sessionid = value;
				_isDirty = true;
			}
		}
		
		public virtual float? Speed
		{
			get
			{
				 return _speed;
			}
			set
			{
				_speed = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Nplatf
		{
			get
			{
				 return _nplatf;
			}
			set
			{
				_nplatf = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Lineid
		{
			get
			{
				 return _lineid;
			}
			set
			{
				_lineid = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Tvagonid
		{
			get
			{
				 return _tvagonid;
			}
			set
			{
				_tvagonid = value;
				_isDirty = true;
			}
		}
		
		public virtual byte[] Vid1
		{
			get
			{
				 return _vid1;
			}
			set
			{
				_vid1 = value;
				_isDirty = true;
			}
		}
		
		public virtual byte[] Vid2
		{
			get
			{
				 return _vid2;
			}
			set
			{
				_vid2 = value;
				_isDirty = true;
			}
		}
		
		public virtual byte[] Vid3
		{
			get
			{
				 return _vid3;
			}
			set
			{
				_vid3 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Pr1
		{
			get
			{
				 return _pr1;
			}
			set
			{
				_pr1 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Pr2
		{
			get
			{
				 return _pr2;
			}
			set
			{
				_pr2 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Pr3
		{
			get
			{
				 return _pr3;
			}
			set
			{
				_pr3 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Trainid2
		{
			get
			{
				 return _trainid2;
			}
			set
			{
				_trainid2 = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
