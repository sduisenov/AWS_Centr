/*************************************************************
** Class generated by CodeTrigger, Version 4.8.6.1
** This class was generated on 27.06.2018 13:13:08
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using Awsd5.DataObjects;

namespace Awsd5.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOSessions.
	///</Summary>
	public partial class BOSessions : DATACONN0_BaseBusiness
	{
		#region member variables
		protected Int32? _id;
		protected Int64? _number;
		protected DateTime? _start;
		protected DateTime? _stop;
		protected Int32? _userid;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOSessions()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 id
		///</parameters>
		public BOSessions(Int32 id)
		{
			try
			{
				DAOSessions daoSessions = DAOSessions.SelectOne(id);
				_id = daoSessions.Id;
				_number = daoSessions.Number;
				_start = daoSessions.Start;
				_stop = daoSessions.Stop;
				_userid = daoSessions.Userid;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOSessions
		///</parameters>
		protected internal BOSessions(DAOSessions daoSessions)
		{
			try
			{
				_id = daoSessions.Id;
				_number = daoSessions.Number;
				_start = daoSessions.Start;
				_stop = daoSessions.Stop;
				_userid = daoSessions.Userid;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new Sessions record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOSessions daoSessions = new DAOSessions();
			RegisterDataObject(daoSessions);
			BeginTransaction("savenewBOSessions");
			try
			{
				daoSessions.Number = _number;
				daoSessions.Start = _start;
				daoSessions.Stop = _stop;
				daoSessions.Userid = _userid;
				daoSessions.Insert();
				CommitTransaction();
				
				_id = daoSessions.Id;
				_number = daoSessions.Number;
				_start = daoSessions.Start;
				_stop = daoSessions.Stop;
				_userid = daoSessions.Userid;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOSessions");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one Sessions record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOSessions
		///</parameters>
		public virtual void Update()
		{
			DAOSessions daoSessions = new DAOSessions();
			RegisterDataObject(daoSessions);
			BeginTransaction("updateBOSessions");
			try
			{
				daoSessions.Id = _id;
				daoSessions.Number = _number;
				daoSessions.Start = _start;
				daoSessions.Stop = _stop;
				daoSessions.Userid = _userid;
				daoSessions.Update();
				CommitTransaction();
				
				_id = daoSessions.Id;
				_number = daoSessions.Number;
				_start = daoSessions.Start;
				_stop = daoSessions.Stop;
				_userid = daoSessions.Userid;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOSessions");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one Sessions record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOSessions daoSessions = new DAOSessions();
			RegisterDataObject(daoSessions);
			BeginTransaction("deleteBOSessions");
			try
			{
				daoSessions.Id = _id;
				daoSessions.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOSessions");
				throw;
			}
		}
		
		///<Summary>
		///SessionsCollection
		///This method returns the collection of BOSessions objects
		///</Summary>
		///<returns>
		///List[BOSessions]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOSessions> SessionsCollection()
		{
			try
			{
				IList<BOSessions> boSessionsCollection = new List<BOSessions>();
				IList<DAOSessions> daoSessionsCollection = DAOSessions.SelectAll();
			
				foreach(DAOSessions daoSessions in daoSessionsCollection)
					boSessionsCollection.Add(new BOSessions(daoSessions));
			
				return boSessionsCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///SessionsCollectionCount
		///This method returns the collection count of BOSessions objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 SessionsCollectionCount()
		{
			try
			{
				Int32 objCount = DAOSessions.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///SessionsCollectionFromSearchFields
		///This method returns the collection of BOSessions objects, filtered by a search object
		///</Summary>
		///<returns>
		///List<BOSessions>
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOSessions> SessionsCollectionFromSearchFields(BOSessions boSessions)
		{
			try
			{
				IList<BOSessions> boSessionsCollection = new List<BOSessions>();
				DAOSessions daoSessions = new DAOSessions();
				daoSessions.Id = boSessions.Id;
				daoSessions.Number = boSessions.Number;
				daoSessions.Start = boSessions.Start;
				daoSessions.Stop = boSessions.Stop;
				daoSessions.Userid = boSessions.Userid;
				IList<DAOSessions> daoSessionsCollection = DAOSessions.SelectAllBySearchFields(daoSessions);
			
				foreach(DAOSessions resdaoSessions in daoSessionsCollection)
					boSessionsCollection.Add(new BOSessions(resdaoSessions));
			
				return boSessionsCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///SessionsCollectionFromSearchFieldsCount
		///This method returns the collection count of BOSessions objects, filtered by a search object
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 SessionsCollectionFromSearchFieldsCount(BOSessions boSessions)
		{
			try
			{
				DAOSessions daoSessions = new DAOSessions();
				daoSessions.Id = boSessions.Id;
				daoSessions.Number = boSessions.Number;
				daoSessions.Start = boSessions.Start;
				daoSessions.Stop = boSessions.Stop;
				daoSessions.Userid = boSessions.Userid;
				Int32 objCount = DAOSessions.SelectAllBySearchFieldsCount(daoSessions);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		public virtual Int64? Number
		{
			get
			{
				 return _number;
			}
			set
			{
				_number = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? Start
		{
			get
			{
				 return _start;
			}
			set
			{
				_start = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? Stop
		{
			get
			{
				 return _stop;
			}
			set
			{
				_stop = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Userid
		{
			get
			{
				 return _userid;
			}
			set
			{
				_userid = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
